{
  "hash": "109db6e00fafcf8fe79418a2b78d7d3c",
  "result": {
    "engine": "jupyter",
    "markdown": "---\ntitle: \"Proposal on FRIENDS\"\nauthor:\n  - name: \"Manas P Panse\"\n    affiliations:\n      - name: \"iSchool, University of Arizona\"\ndescription: \"An analysis of character dialogues, emotions, and episode metadata from the TV show Friends, aiming to uncover patterns in emotions, dialogue frequency, and relationships between characters across the seasons.\"\nformat:\n  html:\n    code-tools: true\n    code-overflow: wrap\n    code-line-numbers: true\n    embed-resources: true\n    code-fold: true\neditor: source\ncode-annotations: hover\nexecute:\n  warning: false\n  message: false\n  error: false\ntoc: true\n---\n\n# 1 - Introduction\n\nThis project aims to investigate and analyze key character emotions, interactions, and patterns in the iconic ***FRIENDS*** TV show using a variety of datasets. By understanding how emotions evolve over time and the interaction patterns of characters, we can uncover insights about character development and audience engagement.\n\n# 2 - Workspace Setup\n\n::: {#workspace-setup .cell execution_count=1}\n``` {.python .cell-code code-summary=\"Workspace Setup\"}\n# Importing Necessary Libraries\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport plotly.express as px\n\n# Setting Plot Styles\nsns.set_theme(style = \"white\")\n\n# Importing Datasets\nfriends_df = pd.read_csv('data/friends.csv')\nfriends_emotions_df = pd.read_csv('data/friends_emotions.csv')\nfriends_info_df = pd.read_csv('data/friends_info.csv')\n```\n:::\n\n\n# 3 - Data\n\n::: {#friends-df-view .cell execution_count=2}\n``` {.python .cell-code code-summary=\"Friends Info\"}\n# FRIENDS\nfriends_df.info()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n<class 'pandas.core.frame.DataFrame'>\nRangeIndex: 67373 entries, 0 to 67372\nData columns (total 6 columns):\n #   Column     Non-Null Count  Dtype \n---  ------     --------------  ----- \n 0   text       67373 non-null  object\n 1   speaker    67097 non-null  object\n 2   season     67373 non-null  int64 \n 3   episode    67373 non-null  int64 \n 4   scene      67373 non-null  int64 \n 5   utterance  67373 non-null  int64 \ndtypes: int64(4), object(2)\nmemory usage: 3.1+ MB\n```\n:::\n:::\n\n\n::: {#friends-emotions-view .cell execution_count=3}\n``` {.python .cell-code code-summary=\"Friends-Emotions Info\"}\n# FRIENDS_EMOTIONS\nfriends_emotions_df.info()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n<class 'pandas.core.frame.DataFrame'>\nRangeIndex: 12606 entries, 0 to 12605\nData columns (total 5 columns):\n #   Column     Non-Null Count  Dtype \n---  ------     --------------  ----- \n 0   season     12606 non-null  int64 \n 1   episode    12606 non-null  int64 \n 2   scene      12606 non-null  int64 \n 3   utterance  12606 non-null  int64 \n 4   emotion    12606 non-null  object\ndtypes: int64(4), object(1)\nmemory usage: 492.6+ KB\n```\n:::\n:::\n\n\n::: {#friends-info-view .cell execution_count=4}\n``` {.python .cell-code code-summary=\"Friends-Info Info\"}\n# FRIENDS_INFO\nfriends_info_df.info()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n<class 'pandas.core.frame.DataFrame'>\nRangeIndex: 236 entries, 0 to 235\nData columns (total 8 columns):\n #   Column             Non-Null Count  Dtype  \n---  ------             --------------  -----  \n 0   season             236 non-null    int64  \n 1   episode            236 non-null    int64  \n 2   title              236 non-null    object \n 3   directed_by        236 non-null    object \n 4   written_by         236 non-null    object \n 5   air_date           236 non-null    object \n 6   us_views_millions  236 non-null    float64\n 7   imdb_rating        236 non-null    float64\ndtypes: float64(2), int64(2), object(4)\nmemory usage: 14.9+ KB\n```\n:::\n:::\n\n\n###### FRIENDS\n\n1.  Columns - `text`, `speaker`, `season`, `episode`, `scene`, `utterance`.\n2.  Rows - 67373\n3.  Info - This dataset contains EACH & EVERY line of dialogue that is spoken in the show, providing us with a rich database for analyzing chracter interactions & speech patterns.\n\n###### FRIENDS_EMOTIONS\n\n1.  Columns - `season`, `episode`, `scene`, `utterance`, `emotion`.\n2.  Rows - 12606\n3.  Info - This dataset provides an EMOTIONAL label for each line, allowing for an in - depth analysis of character emotions across episodes & seasons.\n\n###### FRIENDS_INFO\n\n1.  Columns - `season`, `episode`, `title`, `directed_by`, `written_by`, `air_data`, `us_views_millions`, `imdb_rating`.\n2.  Rows - 236\n3.  Info - This dataset is CRUCIAL for contextualizing the show's progression, viewership trends, and episode quality.\n\nI have chosen these ***FRIENDS*** datasets because, well I love the show; which for me is the ONLY reason. But for a more professional reason, these datasets provide an incredibly detailed glimpse into one of the **MOST BELOVED** TV shows of all time.\n\nAs a massive fan, I am honestly interested about each of our ***FRIENDS*** development over time. This really might prove to be a treasure chest - containing insights into their emotions & personalities that have captivated the audience for decades (me personally few years).\n\nExploring this dataset is like 'breaking the 4th Wall' for me, discovering the emotional highs and lows, understanding some intricate bonds between our ***FRIENDS*** & even predicting how future episodes might unfold based on certain recurring factors.\n\n# 4 - Questions\n\n1.  Which character dominates the dialogue in each EP and/or SS ?\n\n2.  Which character uses the most positive or optimistic language throughout the series ?\n\n3.  Can we predict which character will dominate an episode based on the director, episode rating, and viewership ?\n\n# 5 - Analysis Plan\n\n1.  Character Dominance Analysis :\n    1.  Variables Involved : `speaker`, `season`, `episode`, `scene`, `utterance`.\n    2.  Plan :\n        -   Group by `season`, `episode`, and `scene` to isolate dialogue counts within a scene; while by `season`, `episode` to isolate counts within episode.\n        -   Aggregate `utterance` counts for each of the FRIENDS to find the one with the most dialogue.\n        -   Visualize Results using a Bar or Line chart maybe.\n2.  Language Usage :\n    1.  Variables Involved : `season`, `episode`, `speaker`, `text`.\n    2.  Model Development :\n        -   This could be approached in two ways -\n            -   If simplicity is our priority, utilizing a model like **TextBlob** would prove beneficial.\n            -   If complexity is our priority, utilizing a model like **BERT** would prove beneficial.\n    3.  Plan :\n        -   Perform sentimental analysis on the `text` field to evaluate the tone.\n        -   Sum and compare scores by character.\n        -   Visualize Results using a Donut chart maybe.\n3.  Character Dominance Prediction :\n    1.  Variables Involved : `season`, `episode`, `directed_by`, `us_views_millions`, `imdb_rating`, `speaker`, `utterance`.\n    2.  Model Development :\n        -   This could be approached using **Decision Trees** -\n            -   It will allow us to see how decisions are made at each node.\n            -   It is also easy to visualize.\n    3.  Plan :\n        -   Aggregate dialogue count per episode by character.\n        -   Develop a predictive model using `directed_by`, `us_views_millions`, `imdb_rating` as features.\n        -   Visualize Results using a Feature Importance chart maybe.\n        \n# 6 - Possible Limitations\n\n1.  The dataset `friends_emotions_df` has less rows than `friends_df`. This incompleteness in my data will cause some of the dialogues to not have an emotional label. This issue could possibly skew my analysis if these labels are utilized.\n\n# 7 - Plan of Attack\n\n| **Task Name** | **Status** | **Due** | **Priority** | **Summary** |\n|---|---|---|---|---|\n| **Project Proposal and Initial Research** | Complete | 03-Nov-24 | High | Outline project goals, research questions, and data sources, centered on *Friends* TV show. |\n| **Project Proposal for Initial Instructor Review** | Completed | 03-Nov-24 | High | Submit the project proposal for instructor review, outlining goals, research questions, and data sources focused on *Friends* character dialogue and emotions. |\n| **Project Proposal for Final Instructor Review** | Incomplete | 10-Nov-24 | High | Amend the `proposal.qmd` with feedback from instructor & submit for final review.|\n| **Finalizing Project Outline** | Incomplete |\n| **Data Cleaning and Preparation** | Incomplete | x | Medium | Clean `friends_df`, `friends_emotions_df`, and `friends_info_df`, handling nulls, duplicates, and ensuring data consistency. |\n| **Character Dialogue Analysis** | Incomplete | x | Medium | Identify which character dominates the dialogue in each episode and scene, aggregating by `speaker`, `season`, and `episode`. |\n| **Emotion Analysis Per Character** | Incomplete | x | Medium | Analyze which character uses the most positive or optimistic language across the series using `friends_emotions_df`. |\n| **Predictive Analysis** | Incomplete | x | Medium | Develop a model to predict the character likely to dominate an episode based on `director`, `episode rating`, and `viewership`. |\n| **Visualization Development** | Incomplete | x | Medium | Create visualizations for each analysis question, including bar charts, donut charts, and heatmaps, to effectively show findings. |\n| **Report Compilation** | Incomplete | x | Low | Compile findings and visualizations into a structured report, narrating the analysis process and conclusions. |\n| **Presentation Preparation** | Incomplete   | x | Low | Create a final presentation summarizing key project insights for effective communication and sharing. |\n| **Final Submission** | Incomplete | x | Low | Submit all project files, including report, dashboard, and visualizations, and publish any related content on GitHub or a website. |\n\n",
    "supporting": [
      "proposal_files"
    ],
    "filters": [],
    "includes": {}
  }
}